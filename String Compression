class Solution {
public:
    int compress(vector<char>& chars) {
    //     int n=chars.size();
    //     if(n==1) return 1;
    //     int l=0,i=0;
    //     string ans="";
    //     while(l<n)
    //     {
    //         int temp=0;
    //         while(l<n-1 && chars[l]==chars[l+1])
    //         {
    //             temp++;
    //             l++;
    //         }
    //         temp++;
    //         ans+=chars[l];
    //         i++;l++; cout<<temp<<endl;
    //         if(temp==1) continue;
    //         ans+=(temp+'0'); cout<<ans<<endl;
    //     }
    //     for(int i=0;i<ans.size();i++)
    //     {
    //         chars[i]=ans[i];
    //     }
    //     return ans.size();
    // }
                vector<char> hy;
        string str ;
        int count=0;
        int j=0,i = 0,n = chars.size();
        while(i<n){
            j = i;
            count = 0;
            while(j<n&& chars[i]==chars[j]){
                count+=1;
                j++;
            }
                hy.push_back(chars[i]);
            i = j;
            if(count == 1)continue;
                str = to_string(count);
                for(auto &i: str){
                    hy.push_back(i);
                }
                count=0;
        }
        chars = hy;
        return hy.size();
    }

};
